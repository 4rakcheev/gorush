workspace:
  path: /go/src/github.com/4rakcheev/gorush

pipeline:
  clone:
    image: plugins/git
    tags: true

  # restore the cache from an sftp server
  restore_cache:
    image: 4rakcheev/drone-sftp-cache
    restore: true
    mount: [ .glide, vendor ]
    ignore_branch: true

  build:
    image: 4rakcheev/golang-testing:${GO_VERSION}
    environment:
      - GOPATH=/go
    commands:
      - make dep_install
      - make vet
      - make lint
      - make build
      - coverage all
      # send coverage report
      - make coverage
      # build binary for docker image
      - make docker_build

  release:
    image: 4rakcheev/golang-testing:${GO_VERSION}
    pull: true
    environment:
      TAGS: netgo
    commands:
      - make release
    when:
      event: [ tag ]
      branch: [ refs/tags/* ]
      matrix:
        GO_VERSION: 1.7.4

  docker:
    image: plugins/docker
    repo: 4rakcheev/gorush
    tags: [ '${DRONE_TAG}' ]
    when:
      event: [ tag ]
      branch: [ refs/tags/* ]

  docker:
    image: plugins/docker
    repo: 4rakcheev/gorush
    tags: [ 'latest' ]
    when:
      event: [ push ]
      branch: [ master ]

  facebook:
    image: 4rakcheev/drone-facebook
    pull: true
    to: 1234973386524610
    when:
      status: [ success, failure ]
      matrix:
        GO_VERSION: 1.7.4

  github:
    image: plugins/github-release
    files:
      - dist/release/*
    when:
      event: [ tag ]
      branch: [ refs/tags/* ]
      matrix:
        GO_VERSION: 1.7.4

  # rebuild the cache on the sftp server
  rebuild_cache:
    image: 4rakcheev/drone-sftp-cache
    rebuild: true
    mount: [ .glide, vendor ]
    ignore_branch: true
    when:
      branch: master
      matrix:
        GO_VERSION: 1.7.4

services:
  redis:
    image: redis:alpine

matrix:
  GO_VERSION:
    - 1.7.4
    - 1.6.4
